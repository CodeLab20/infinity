version: "3.8"
services:

  # Cassandra
  cassandra:
    container_name: cassandra
    image: cassandra
    ports:
      - "9042:9042"
    networks:
      - infinity

  # Zookeeper for Kafka
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - infinity

  # Kafka messaging platform
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - infinity

  # Init container to create keyspace and tables in Cassandra
  infinity-init:
    container_name: infinity-init
    build:
      context: ./infinity-init
      dockerfile: Dockerfile
    restart: on-failure
    networks:
      - infinity

  # REST application
  infinity-rest:
    container_name: infinity-rest
    build:
      context: ./infinity-rest
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - cassandra
    networks:
      - infinity

  # Processor application
  infinity-processor:
    container_name: infinity-processor
    build:
      context: ./infinity-processor
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - kafka
      - cassandra
    networks:
      - infinity
  
  # Analytics application
  infinity-analytics:
    container_name: infinity-analytics
    build:
      context: ./infinity-analytics
      dockerfile: Dockerfile
    restart: always
    environment:
      CASSANDRA_HOST: cassandra
      CAMEL_COMPONENT_KAFKA_BROKERS: kafka:29092
    depends_on:
      - cassandra
    networks:
      - infinity

networks:
  infinity:

volumes:
  cassandra:
